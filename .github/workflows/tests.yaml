name: Test Suite for CoreDNS

on:
  - pull_request

jobs:
  lint-and-unit-tests:
    name: Lint & Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Tox
      run: pip install tox
    - name: Run lint & unit tests
      run: tox

  func-test:
    name: Functional test with MicroK8s
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Install LXD
      run: |
        set -eux
        sudo snap refresh lxd --classic --channel=latest/stable
        sudo usermod -a -G lxd $USER
        sudo lxd init --auto

    - name: Install MicroK8s
      uses: balchua/microk8s-actions@v0.2.2
      with:
        channel: 'latest/stable'
        addons: '["dns", "storage", "rbac"]'

    - name: Install Dependencies
      run: |
        set -eux
        sudo snap install charmcraft --classic --channel=latest/edge
        sudo snap install juju --classic
        sudo snap install juju-wait --classic
        sudo snap list
        sudo apt update
        sudo apt install tox

    - name: Wait before bootstrap
      run: |
        set -eux
        sg microk8s -c 'microk8s status --wait-ready'
        kubectl wait --for=condition=available --timeout=5m -nkube-system deployment/coredns deployment/hostpath-provisioner

    - name: Bootstrap MicroK8s with Juju
      run: |
        sg microk8s 'juju bootstrap microk8s microk8s'
        sg microk8s 'juju add-model coredns microk8s'

    - name: Run Integration tests
      run: |
        KUBECONFIG=/home/runner/.kube/config tox -e integration -- --model=coredns
      timeout-minutes: 20

    - name: Setup Debug Artifact Collection
      run: mkdir tmp
      if: failure()

    - name: Collect pytest logs
      if: failure()
      run: cat .tox/integration/log/pytest-* | tee tmp/pytest.log

    - name: Collect charmcraft logs
      if: failure()
      run: |
        cat /home/runner/snap/charmcraft/common/cache/charmcraft/log/charmcraft-* | tee tmp/charmcraft.log
        cat /home/runner/snap/charmcraft/common/charmcraft-log-* | tee tmp/charmcraft.log
    - name: Collect Juju status
      if: failure()
      run: juju status | tee tmp/juju-status.txt

    - name: Collect Juju log
      if: failure()
      run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt

    - name: Collect Kube status
      if: failure()
      run: |
        kubectl get all -A | tee tmp/kube-summary.txt
        kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
        kubectl describe gateways -A | tee tmp/kube-gateways.txt
        kubectl describe deployments -A | tee tmp/kube-deployments.txt
        kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt

    - name: Collect Kube logs
      if: failure()
      run: |
        kubectl logs -n coredns -l juju-app=coredns | tee tmp/coredns.log

    - name: Upload debug artifacts
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-run-artifacts
        path: tmp
